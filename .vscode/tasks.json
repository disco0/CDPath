// A task runner that invokes Pester to run all Pester tests under the
// current workspace folder.
// NOTE: This Test task runner requires an updated version of Pester (>=3.4.0)
// in order for the problemMatcher to find failed test information (message, line, file).
// If you don't have that version, you can update Pester from the PowerShell Gallery
// with this command:
//
// PS C:\> Update-Module Pester
//
// If that gives an error like:
// "Module 'Pester' was not installed by using Install-Module, so it cannot be updated."
// then execute:
//
// PS C:\> Install-Module Pester -Scope CurrentUser -Force
//
// NOTE: The Clean, Build and Publish tasks require PSake. PSake can be installed
// from the PowerShell Gallery with this command:
//
// PS C:\> Install-Module PSake -Scope CurrentUser -Force
//
// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process
{
	"version": "2.0.0",
	// Start PowerShell
	"windows": {
		"command": "c:\\windows\\sysnative\\windowspowershell\\v1.0\\PowerShell.exe",
		"args": [
			"-NoProfile",
			"-ExecutionPolicy",
			"Bypass"
		]
	},
	"linux": {
		"command": "/usr/bin/powershell",
		"args": [
			"-NoProfile"
		]
	},
	"osx": {
		"command": "/usr/local/bin/powershell",
		"args": [
			"-NoProfile"
		]
	},
	// Associate with test task runner
	"tasks": [
		{
			"taskName": "Test",
			"suppressTaskName": true,
			"group": {
				"kind": "test",
				"isDefault": true
			},
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			},
			"args": [
				"Set-Location ${workspaceRoot};",
				"Remove-Module cdpath -ea:0 -force;Import-Module -force ./cdpath.psd1;",
				"Write-Host 'Invoking Pester...'; Invoke-Pester -PesterOption @{IncludeVSCodeMarker=$true} ./cdpath.test.ps1;",
				"Invoke-Command { Write-Host 'Completed Test task in task runner.' }"
			],
			"problemMatcher": "$pester"
		}
	]
}